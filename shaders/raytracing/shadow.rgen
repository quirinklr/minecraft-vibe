#version 460
#extension GL_EXT_ray_tracing : require

layout(location = 0) rayPayloadEXT float shadowPayload;

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, r32f) uniform image2D shadowImage;

layout(push_constant) uniform Constants {
    mat4 viewInverse;
    mat4 projInverse;
    vec3 cameraPos;
    vec3 lightDirection;
} pc;

void main()
{
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 uv = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = uv * 2.0 - 1.0;

    vec4 target = pc.projInverse * vec4(d.x, d.y, 1.0, 1.0);
    vec3 direction = normalize((pc.viewInverse * vec4(normalize(target.xyz), 0.0)).xyz);
    
    vec3 origin = pc.cameraPos;
    
    traceRayEXT(topLevelAS,         
                gl_RayFlagsOpaqueEXT, 
                0xFF,                 
                0,                    
                0,                    
                0,                    
                origin,               
                0.001,                
                direction,            
                10000.0,              
                0);                   

    
    imageStore(shadowImage, ivec2(gl_LaunchIDEXT.xy), vec4(shadowPayload, 0, 0, 0));
}